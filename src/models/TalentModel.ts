// src/models/TalentModel.ts
import { query } from '../utils/db'; // Database query helper
 // Talent interface (optional, but for type safety)

export interface Talent {
    id?: number; // Optional because it will be auto-generated by the database
    name: string;
    talentName: string;
    institutionName: string;
    talentType: string;
    email: string;
    contactNumber: string;
    description: string;
    attachment: string; // File path where the attachment is stored
  }
 
export class TalentModel {
  // Static method to insert talent into the database
  static async submitTalent(talent: Talent): Promise<any> {
    try {
      const { 
        name, 
        talentName, 
        institutionName, 
        talentType, 
        email, 
        contactNumber, 
        description, 
        attachment 
      } = talent;

      // Prepare SQL query to insert talent data
      const insertQuery = `
        INSERT INTO talents (name, talentName, institutionName, talentType, email, contactNumber, description, attachment)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?)
      `;
      const values = [
        name,
        talentName,
        institutionName,
        talentType,
        email,
        contactNumber,
        description,
        attachment, // File path or URL from the controller
      ];

      // Execute the query and return the result
      const result = await query(insertQuery, values);
      return result;
    } catch (error: unknown) {
      // Type assertion to assume 'error' is an instance of Error
      if (error instanceof Error) {
        throw new Error('Error during talent submission: ' + error.message);
      } else {
        throw new Error('An unknown error occurred during talent submission');
    }
  }
}
}
